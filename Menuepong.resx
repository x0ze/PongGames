<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="settings.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC4AAAAwCAYAAABuZUjcAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABHBJREFUaEPVmC1P9FAQhfFoBAqHQyJQOAQOhSLBIVEoDAKDRaEx8BcIfwCFQqAQ
        JAgSBIKQkJD03aft3Z2dnvu1u6/gJCe7nfZ+z5yZdmmE5o9SGv8CpfEvUBqruLm52Wxtbcl7lldXV832
        9ra8NwOlsYg7OzvN3d1d8/v72zw9PclnAvf395sAnj09PW3W1tbks4WUxiQPDw+bx8fHfhoT7O7uyuch
        C/T4/Pxs7SxKtclQGgdcWVlpzs7OmpeXl37YIZiEaru6utpOMoXX19faE5DGAQ8ODvoh0lhfXx+0PTk5
        6e/G8fz8PGiXoTRKpnY74Pr6etAOn84Bn/ftMpRGSTovwe3tbbsA+PDw0Fvj+Pr6miVQpTHKj4+PfrjF
        IRYbGUpjlJeXl/1wi8N/VZVAgg/dXhToi3ygxoIoEsIg7k0bjo+Pk1mQ+yngrygEOo9/85sLap5Hbu04
        bBAxgoyyOKFWk4vl5eV2YB5kQCZp73OkPz8//XDTYJJHR0fRIKMsuLi4aN7e3voW02BxbFjIxn4cygXX
        5+RC6S0LQSVo+P393VsnYCJ7e3u2wyzPz8/71uVg510/k4sSvbVgl237QE6GIOaomaRyPU4gl009nNZ3
        f6jaaoLOTxoX4WRiQEZZhG9TM3nKAtO++8PulAL3MB20RZdyIwUfiLZqLIGRzq6DWNAoWJ9m0rV4f38f
        t4c3Nzf9nTxM+bzUqkEprItw1KU77WH7QepK+kFpTJbtahB2oQQsMgyY8ukScFqhr/v7+946BPGBqm1s
        bIyfH3H8p81QqQ58MTQv7K6rAo4JJ6pGaWyThYetmWuDSoGNCP0pVTOBqCiNLb0rkE3DvUUUW/is1Xjr
        5ywi82ItjS29RNqjrZHPGJicLbB8gKbeYUeUxpYEhIXd8VnStgcTDQFHFejrE95xw3iC0tiSiVpQCIV7
        HPG8IPhCf+QGD04E+SsqayG7SXpVoMYIz837NkQMhb6UGFiQIIkrM37X0Na/Kdh6Y153sbpcU+D1k9fH
        FIMrdFqJnAXsXuiDICyFqZO6xqWZE9hdp2CqaQv8y7GPpRRwqb5d17hWl62vQ6SyBHanYe24pm33h1RO
        JisFsWDTP6T2YAH0g7ShCkgeQUwgulqj6AuXBeWIaT/pqLZoYvKx17bw/ugnGxjbaa/lFk4WJ52l3oII
        wpj8sWDxFi5JIMZ8GlXDBTkJrzK+hh9x6mLKV1k9kwo1A64R+9SAS3CUVHO2xiAjcioEVUryrKYH0g+L
        YcP4dfenLlo/xQVI9wzq78Pcd5Lg2zB19AE2Iyvy2QQ6+9RFEWuVIIfcxCOUxiRLpa8G9s2qkNIYJX5e
        g1iwe9jKs5DSGGWJm5CWeXtBQZDFXAEVkPr4KSiNUcaqRgtVhpa4l0swOUqjZMk3FFtj17b1BVyG0iiJ
        rrIrKb8VejtmTEZJbiQd1SZBaUwSTaVCVBNRHzgDeRWzwH1iJUMBpbGYpGiyHqdgPo9FSXLjeV+gzUBp
        nImxgmrxXGr+ARaG9H9KFcIqAAAAAElFTkSuQmCC
</value>
  </data>
</root>