<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>